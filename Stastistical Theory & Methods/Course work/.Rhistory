axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means (MS - FS), with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
estimate  =  c(0.52, 7.05, 6.53)
# Analysis labels for the left side:
analysis = c( "Pair 1",
"Pair 2",
"Pair 3")
# Results of each test (estimated mean,
# upper CI limit, lower CI limit, p-value):
estimate  =  c(0.52, 7.05, 6.53)
upper     =  c(2.88, 0.72, 1.4)
lower     =  c(-1.8, -14.8, -14.45)
pval      =  c(0.67,0.07,0.097)
# Note that the order of the results in each vector
# must match the order of the labels in the
# vector "analysis".
# Set the margin widths:
par(mar = c(6,6,1,6))
# Create an empty plot of a suitable
# size (considering the width of your
# confidence intervals):
plot(x = 0,                                  # One point at (0,0).
xlim = c(-20, 20), ylim=c(0, 5),        # Axis limits.
type = "n", xaxt = "n", yaxt="n",       # No points, no axes drawn.
xlab = NULL, ylab= NULL, ann = FALSE,   # No axis labels or numbers.
bty="n")                                # No box.
# Add a horizontal (side = 1) axis:
axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means (MS - FS), with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
# Analysis labels for the left side:
analysis = c( "Pair 1",
"Pair 2",
"Pair 3")
# Results of each test (estimated mean,
# upper CI limit, lower CI limit, p-value):
estimate  =  c(29.97, 29.45, 36.5)
upper     =  c(2.88, 0.72, 1.4)
lower     =  c(-1.8, -14.8, -14.45)
pval      =  c(0.67,0.07,0.097)
# Note that the order of the results in each vector
# must match the order of the labels in the
# vector "analysis".
# Set the margin widths:
par(mar = c(6,6,1,6))
# Create an empty plot of a suitable
# size (considering the width of your
# confidence intervals):
plot(x = 0,                                  # One point at (0,0).
xlim = c(-20, 20), ylim=c(0, 5),        # Axis limits.
type = "n", xaxt = "n", yaxt="n",       # No points, no axes drawn.
xlab = NULL, ylab= NULL, ann = FALSE,   # No axis labels or numbers.
bty="n")                                # No box.
# Add a horizontal (side = 1) axis:
axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means (MS - FS), with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
# Analysis labels for the left side:
analysis = c( "Pair 1",
"Pair 2",
"Pair 3")
# Results of each test (estimated mean,
# upper CI limit, lower CI limit, p-value):
estimate  =  c(29.97, 29.45, 36.5)
upper     =  c(2.88, 0.72, 1.4)
lower     =  c(-1.8, -14.8, -14.45)
pval      =  c(0.67,0.07,0.097)
# Note that the order of the results in each vector
# must match the order of the labels in the
# vector "analysis".
# Set the margin widths:
par(mar = c(6,6,1,6))
# Create an empty plot of a suitable
# size (considering the width of your
# confidence intervals):
plot(x = 0,                                  # One point at (0,0).
xlim = c(-20, 20), ylim=c(0, 5),        # Axis limits.
type = "n", xaxt = "n", yaxt="n",       # No points, no axes drawn.
xlab = NULL, ylab= NULL, ann = FALSE,   # No axis labels or numbers.
bty="n")                                # No box.
# Add a horizontal (side = 1) axis:
axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means, with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
estimate  =  c(0.52, 7.05, 6.53)
# Analysis labels for the left side:
analysis = c( "Pair 1",
"Pair 2",
"Pair 3")
# Results of each test (estimated mean,
# upper CI limit, lower CI limit, p-value):
estimate  =  c(0.52, 7.05, 6.53)
upper     =  c(2.88, 0.72, 1.4)
lower     =  c(-1.8, -14.8, -14.45)
pval      =  c(0.67,0.07,0.097)
# Note that the order of the results in each vector
# must match the order of the labels in the
# vector "analysis".
# Set the margin widths:
par(mar = c(6,6,1,6))
# Create an empty plot of a suitable
# size (considering the width of your
# confidence intervals):
plot(x = 0,                                  # One point at (0,0).
xlim = c(-20, 20), ylim=c(0, 5),        # Axis limits.
type = "n", xaxt = "n", yaxt="n",       # No points, no axes drawn.
xlab = NULL, ylab= NULL, ann = FALSE,   # No axis labels or numbers.
bty="n")                                # No box.
# Add a horizontal (side = 1) axis:
axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means, with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
boxplot(x$CareerDuration)
boxplot(x$AgeFirstKill)
boxplot(x$AgeLastKill)
boxplot(m1)
# Analysis labels for the left side:
analysis = c( "Pair 1",
"Pair 2",
"Pair 3")
# Results of each test (estimated mean,
# upper CI limit, lower CI limit, p-value):
estimate  =  c(0.52, 7.05, 6.53)
upper     =  c(2.88, 0.72, 1.4)
lower     =  c(-1.8, -14.8, -14.45)
pval      =  c(0.67,0.07,0.097)
# Note that the order of the results in each vector
# must match the order of the labels in the
# vector "analysis".
# Set the margin widths:
par(mar = c(6,6,1,6))
# Create an empty plot of a suitable
# size (considering the width of your
# confidence intervals):
plot(x = 0,                                  # One point at (0,0).
xlim = c(-20, 20), ylim=c(0, 5),        # Axis limits.
type = "n", xaxt = "n", yaxt="n",       # No points, no axes drawn.
xlab = NULL, ylab= NULL, ann = FALSE,   # No axis labels or numbers.
bty="n")                                # No box.
# Add a horizontal (side = 1) axis:
axis(side = 1, cex.axis = 1)
# Add an axis label 4 lines below the axis:
mtext("Estimated difference in means, with 95% confidence interval",
side = 1, line = 4)
# Add some grid lines, preferably lined up
# with the numbers on the horizontal axis:
for(i in c(-40, -20, 0, 20, 40)){
lines(c(i, i), c(0, 5), lty = 2, col = "gray53")
}
# Add labels for each analysis on the left (side = 2)
# at vertical heights of 1, 2, 3 and 4:
verticalpos = 1:3
mtext(text = analysis,  at = verticalpos,
side = 2, line = 5, outer = FALSE, las = 1, adj = 0)
# Try changing the "line" option to move these closer to
# or away from the plotted intervals.
# Plot the four point estimates (centres
# of the CIs for each analysis):
points(estimate, verticalpos, pch = 16)
# Plot the four interval estimates:
for(i in 1:3 ){
lines(c(lower[i], upper[i]), c(verticalpos[i], verticalpos[i]))
lines(c(lower[i], lower[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
lines(c(upper[i], upper[i]), c(verticalpos[i] + 0.2, verticalpos[i] - 0.2))
}
# Now we add numerical results on the right (side = 4), but we
# need to put them into a nice form first. Note that
# paste() merges words and numbers, and formatC()
# allows us to control the number of decimal places.
est <- formatC(estimate, format='f', digits = 0)
P <- formatC(pval , format = 'f', digits = 3)
pval <- paste("p =", P)    # Type pval to see what this does.
L <- formatC(lower, format = 'f', digits = 0)
U <- formatC(upper, format = 'f', digits = 0)
interval <- paste("(", L, ", ", U, "),", sep = "")   # Type interval to check.
# Putting it all together:
results <- paste(est, interval, pval)
# Add to the plot:
mtext(text = results, at = verticalpos,
side = 4, line = 4, outer = FALSE, las = 1, adj = 1)
# Like a Christmas present, an R
# plot belongs in a box:
box("inner")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:4000)/250
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
length(x$CareerDuration)
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:40000)/597
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:400)/597
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:400)/5
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:40000)/5
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:4000)/500
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^597)*exp(-lambda*597*x1bar)
return(log(L))
}
lambda <- (1:4000)/800
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <-sample(x$CareerDuration,250)
#x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^250)*exp(-lambda*250*x1bar)
return(log(L))
}
lambda <- (1:4000)/800
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <-sample(x$CareerDuration,250)
#x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^250)*exp(-lambda*250*x1bar)
return(log(L))
}
lambda <- (1:4000)/250
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <-sample(x$CareerDuration,250)
#x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^250)*exp(-lambda*250*x1bar)
return(log(L))
}
lambda <- (1:400)/250
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <-sample(x$CareerDuration,250)
#x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^250)*exp(-lambda*250*x1bar)
return(log(L))
}
lambda <- (1:4000)/550
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
x1 <-sample(x$CareerDuration,250)
#x1 <- x$CareerDuration
length(x$CareerDuration)
x1bar <- mean(x1)
loglik <- function(lambda){
L <- (lambda^250)*exp(-lambda*250*x1bar)
return(log(L))
}
lambda <- (1:4000)/5500
plot(lambda, loglik(lambda), type = "l",
xlab = "lambda", ylab = "log likelihood")
var(x$AgeFirstKill)
var(x$AgeLastKill)
